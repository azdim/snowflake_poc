name: CI pipeline

on:
  push:
    'dev'
  pull_request:
    'main'
  paths-ignore:
    - 'database/*'
    - 'roles/*'

permissions:
  id-token: write
  contents: read

jobs:
  test:
  runs-on: ubuntu
  steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
    - name: pre-commit
      id: init
      run: |
        pip install pre-commit
        curl -s https://raw.githubusercontent.com/terraform-linters/tflint/master/install_linux.sh | bash
        pre-commit run --all-files

  dev:
    runs-on: ubuntu
    needs: test
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
      - name: Terraform Init
        id: init
        run: |
          terraform init
      - name: Terraform Plan
        id: plan
        run: |
          terraform plan -var-file='./inputss/dev/inputs.tfvars' -var 'password=${{secrets.SNOWFLAKE_PASSWORD}}' -no-color | tee plan.out
          echo 'REPORT<<EOF' >> $GITHUB_ENV
          cat report.out     >> $GITHUB_ENV
          echo 'EOF'         >> $GITHUB_ENV
      - name: Terraform Validate
        id: Validate
        run: |
          terraform validate
      - name: Add Plan output to PR
        uses: actions/github-script@v6
        env:
          PLAN: "Terraform Plan\n${{ env.REPORT }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Plan \`${{ steps.plan.outcome }}\`

            <details><summary>Show Plan</summary>

            \`\`\`terraform plan\n
            ${process.env.PLAN}
            \n\`\`\`

            </details>

            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
      - name: Terraform Apply
        if: ${{ github.event_name != 'pull_request' }} && env.GITHUB_HEAD_REF == 'main'
        id: apply
        run: |
          terraform apply -var-file='./inputs/dev/inputs.tfvars' -var 'password=${{secrets.SNOWFLAKE_PASSWORD}}' -no-color
      
  